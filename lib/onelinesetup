#!/bin/bash
DOMAIN=${1:-magento2.test}
VERSION=${2:-2.3.2}

[ -z "$2" ] && echo "Please specify the version to download (ex. 2.0.0)" && exit
mkdir -p src && curl -L http://pubfiles.nexcess.net/magento/ce-packages/magento2-$2.tar.gz | tar xzf - -o -C src

git init -qqq
git remote add origin https://github.com/mmularski/magento2-docker
git fetch origin -qqq
git checkout origin/master -- compose/magento-2
mv compose/magento-2/* ./
mv compose/magento-2/.vscode ./
rm -rf compose .git
git init

docker-compose stop

# get rid of vertex/module-tax, not required and causes checksum errors on composer install
# prevent double or more insertion
if ! grep -qF '"replace": { "vertex/module-tax": "*" }' src/composer.json; then
    sed -e 's/"conflict": {/"replace": { "vertex\/module-tax": "*" },\ "conflict": {/' src/composer.json > composer.json && mv composer.json src/composer.json
fi

docker-compose -f docker-compose.yml up -d
sleep 1 #Ensure containers are started...

echo "Copying all files from host to container..."
rm -rf src/vendor #Clear for step below
docker cp src/./ $(docker-compose ps -q phpfpm|awk '{print $1}'):/var/www/html/
echo "Completed copying all files from host to container"

docker-compose exec phpfpm -T "chmod u+x bin/magento"

if hash composer 2>/dev/null; then
    PUBLIC_KEY="$(composer config -gl | grep '\[http-basic.repo.magento.com.username\]' | cut -c40-)"
    PRIVATE_KEY="$(composer config -gl | grep '\[http-basic.repo.magento.com.password\]' | cut -c40-)"
fi

if [ -z "$PUBLIC_KEY" ] || [ -z "$PRIVATE_KEY" ]; then
    exec < /dev/tty
    echo
    echo
    echo "    Authentication required (repo.magento.com, public_key and private_key):"
    read -p "        Username: " PUBLIC_KEY
    read -p "        Password: " PRIVATE_KEY
    echo
    if [ -n "$PUBLIC_KEY" ] && [ -n "$PRIVATE_KEY" ] && hash composer 2>/dev/null; then
        read -p "    Add authentication information to host composer config? y/n: " ADD_AUTH
        echo
        if [[ $ADD_AUTH =~ ^[Yy]$ ]]; then
            composer global config http-basic.repo.magento.com $PUBLIC_KEY $PRIVATE_KEY
        fi
        ADD_AUTH=''
    fi
    exec <&-
fi

if [ -n "$PUBLIC_KEY" ] && [ -n "$PRIVATE_KEY" ]; then
    docker-compose exec phpfpm -T "composer config http-basic.repo.magento.com $PUBLIC_KEY $PRIVATE_KEY"
    PUBLIC_KEY=''
    PRIVATE_KEY=''
fi

echo "Forcing reinstall of composer deps to ensure perms & reqs..."
docker-compose exec phpfpm -T "composer install"

docker-compose exec phpfpm -T "bin/magento setup:install \
  --db-host=db \
  --db-name=magento \
  --db-user=magento \
  --db-password=magento \
  --base-url=https://$1/ \
  --admin-firstname=John \
  --admin-lastname=Smith \
  --admin-email=john.smith@gmail.com \
  --admin-user=john.smith \
  --admin-password=password123 \
  --language=en_US \
  --currency=USD \
  --timezone=America/New_York \
  --use-rewrites=1"

echo "Turning on developer mode.."
docker-compose exec phpfpm bash php bin/magento deploy:mode:set developer

docker-compose exec phpfpm bash php bin/magento indexer:reindex

echo "Forcing deploy of static content to speed up initial requests..."
docker-compose exec phpfpm bash php bin/magento setup:static-content:deploy -f 

echo "Enabling Redis for cache..."
docker-compose exec phpfpm bash php bin/magento setup:config:set --no-interaction --cache-backend=redis --cache-backend-redis-server=redis --cache-backend-redis-db=0

echo "Enabling Redis for Full Page Cache..."
docker-compose exec phpfpm bash php bin/magento setup:config:set --no-interaction  --page-cache=redis --page-cache-redis-server=redis --page-cache-redis-db=1

echo "Enabling Redis for session..."
docker-compose exec phpfpm bash php bin/magento setup:config:set --no-interaction --session-save=redis --session-save-redis-host=redis --session-save-redis-log-level=4 --session-save-redis-db=2

echo "Clearing the cache for good measure..."
docker-compose exec phpfpm bash php bin/magento cache:flush

echo "Copying files from container to host after install..."
docker cp $(docker-compose ps -q phpfpm|awk '{print $1}'):/var/www/html/./ src/
echo "Completed copying all files from container to host"

echo "Restarting containers with host bind mounts for dev..."
docker-compose stop
docker-compose up -d

echo "Docker development environment setup complete."
echo "Add VM IP to /etc/hosts file and you may access your Magento instance at https://$1/"
